<?php
/**
 * Created by PhpStorm.
 * User: arvil
 * Date: 2019-04-14
 * Time: 21:24
 */

namespace BOH\Applications\MyBuildingsApp\RestEndpoints\Endpoints;

use Cocur\Slugify\Slugify;
use BOH\Applications\MyBuildingsApp\Resources\Resources;

class BuildingAddImage extends BuildingDetailsUpdate
{

	public $resources;
	private $building_name;
	private $photographer_name;

	public function __construct(Resources $resources)
	{
		$this->resources = $resources;
	}

	public function endpoint_name(): string
	{
		return 'building_add_image';
	}

	public function endpoint_route() : string {
		return '/building-add-image/(?P<building_id>\d+)';
	}

	public function endpoint_route_base() : string {
		return '/building-add-image/';
	}

	public function endpoint_method(): string
	{
		return 'POST';
	}

	public function endpoint_callback( \WP_REST_Request $request ) : \WP_REST_Response {
		$data = array();

		$building_id = $request->get_param( 'building_id' );
		$building_id = ( $building_id && filter_var( $building_id, FILTER_VALIDATE_INT ) ) ? (int) $building_id : null;

		// if not allowed to edit.
		if ( ! $this->is_allowed_to_edit($building_id) ) {
			return new \WP_REST_Response( $data, 403  );
		}

		if ( ! $building_id ) {
			return new \WP_REST_Response($data);
		}

//		$data['request']['buildingName'] = $request['buildingName'];
		$data['request']['image'] = $request->get_file_params()['image'];
		$data['request']['imageCredit'] = $request['imageCredit'];

		if ( ! function_exists( 'wp_handle_upload' ) ) {
			require_once( ABSPATH . 'wp-admin/includes/file.php' );
		}
		if ( ! function_exists( 'wp_generate_attachment_metadata' ) ) {
			require_once( ABSPATH . 'wp-admin/includes/image.php' );
		}

		$args = array(
			'p'         => $building_id, // ID of a page, post, or custom type
			'post_type' => 'any'
		);
		$query = new \WP_Query($args);

		$data['output']['getting_post_title']['query'] = $query;
		$data['output']['getting_post_title']['posts'] = $query->posts;

		// globals.
		$this->building_name = $this->get_building_title_by_id( $building_id );
		$this->photographer_name = $request['imageCredit'];
		$data['output']['building_name'] = $this->building_name;
		$data['output']['photographer_name'] = $this->photographer_name;

		$uploadedfile = $request->get_file_params()['image'];

		$upload_overrides = array( 'test_form' => false, 'unique_filename_callback' => array($this, 'cb_unique_filename_callback') );
		$movefile = wp_handle_upload( $uploadedfile, $upload_overrides );

		if ( $movefile && ! isset( $movefile['error'] ) ) {
			$data['$movefile'] = $movefile;
			// insert this image as this post's attachment.
			$attachment = array(
				'post_mime_type' => $movefile['type'],
				'post_title' => $this->building_name . " by " . $this->photographer_name,
				'post_content' => $this->building_name . " by " . $this->photographer_name,
				'post_status' => 'inherit'
			);
			$image_id = wp_insert_attachment($attachment, $movefile['file'], $building_id);
			$attach_data = wp_generate_attachment_metadata( $image_id, $movefile['file'] );
			wp_update_attachment_metadata( $image_id,  $attach_data );
			$data['output']['image']['id'] = $image_id;
			$data['output']['image']['url'] = wp_get_attachment_url($image_id);
		} else {
			/**
			 * Error generated by _wp_handle_upload()
			 * @see _wp_handle_upload() in wp-admin/includes/file.php
			 */
			$data['error'] = $movefile['error'];
			return new \WP_REST_Response( $data, 500 );
		}

		$data['result'] = $this->process($building_id, $data['request']);

		return new \WP_REST_Response( $data );
	}

	public function cb_unique_filename_callback($dir, $name, $ext) {
//		error_log("\n dir \n".print_r($dir, true), 3, '/Users/arvil/Projects/brisbaneopenhouse.jsa.test/error.log');
//		error_log("\n name \n".print_r($name, true), 3, '/Users/arvil/Projects/brisbaneopenhouse.jsa.test/error.log');
//		error_log("\n ext \n".print_r($ext, true), 3, '/Users/arvil/Projects/brisbaneopenhouse.jsa.test/error.log');
		$slugify = new Slugify(['lowercase' => false]);
		$name = $slugify->slugify($this->building_name) . '_' . $slugify->slugify($this->photographer_name) . '_' . time();
		return $name.$ext;
	}

	private function process($building_id, $input) {
		$output = array();

		$post = get_post( $building_id );

		if ( ! $building_id || null === $post ) {
			$output = false;
			return $output;
		}


		return $output;
	}

	private function get_building_title_by_id( $building_id ) {
		$args = array(
			'p'         => $building_id, // ID of a page, post, or custom type
			'post_type' => 'building'
		);
		$query = new \WP_Query($args);

		return $query->posts[0]->post_title;
	}
}
